name: construction image docker


on:
  push:
    branches:
      - main
      - master



jobs:
  build_image:
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        env:
          GITHUB_PAT: ${{ secrets.PAT }}
        with:
          push: true
          tags: inseefrlab/utilitr:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
# build_bookdown:
#   runs-on: ubuntu-latest
#   needs: build_image
#   env:
#     GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
#   container:
#     image: inseefrlab/utilitr:latest # your docker image
#   steps:
#      - name: Add apt install 
#        run: |
#          apt-get install software-properties-common
#
#     - name: Setup R
#       uses: r-lib/actions/setup-r@v1
#
#      - name: Install pandoc and pandoc citeproc
#        run: |
#          brew install pandoc
#          brew install pandoc-citeproc

#      - name: Cache Renv packages
#        uses: actions/cache@v2
#        with:
#          path: $HOME/.local/share/renv
#          key: r-${{ hashFiles('renv.lock') }}
#          restore-keys: r-
#
#      - name: Cache bookdown results
#        uses: actions/cache@v2
#        with:
#          path: _bookdown_files
#          key: bookdown-${{ hashFiles('**/*Rmd') }}
#          restore-keys: bookdown-
#
#      - name: Install packages
#        run: |
#          R -e 'install.packages("renv")'
#          R -e 'renv::restore()'
#
#     - name: Build site
#       run: |
#         R -e 'install.packages("knitr")'
#         R -e 'remotes::install_deps(dependencies = TRUE, upgrade = FALSE)'
#         R -e 'bookdown::render_book("index.Rmd", output_format = 'all', output_dir = '_public')'

#     - name: Install npm
#       uses: actions/setup-node@v1
#
#      - name: Deploy to Netlify
#        # NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID added in the repo's secrets
#        env:
#          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
#          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
#        run: |
#          npm install netlify-cli -g
#          netlify deploy --prod --dir _book
